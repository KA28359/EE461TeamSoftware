{"version":3,"sources":["components/Navbar/NavbarElements.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","CenterForm","div","NavMenu","NavButton","button","LogBtn","Navbar","to","App","path","SignIn","Home","useState","imgNum","setVal","timer","React","useRef","icons","className","descriptions","resetTimeout","current","clearTimeout","useEffect","setTimeout","prevIndex","length","updateVal","input","IconButton","onClick","SignUp","props","state","email","username","password","retype","error","blank","authenticated","suError","eCode","e","this","setState","user","pass","info","fetch","method","headers","body","JSON","stringify","then","response","json","data","auth","TextField","onChange","event","setEmail","target","value","id","label","variant","margin","setUsername","setPassword","checkPassword","style","color","submitClicked","type","Component","setAuth","setError","errorCode","setErrorCode","name","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d9fbde8.chunk.js","sourcesContent":["import { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n//nav bar itself\nexport const Nav = styled.nav`\n  background: #CC5500;\n  height: 85px;\n  display: flex;\n  justify-content: space-around;\n  //padding: 0.2rem calc((100vw - 1000px) / 2);\n  z-index: 12;\n  /* Third Nav */\n  /* justify-content: flex-start; */\n`;\n  \n//words in nav bar (TEAM SOFTWARE)\nexport const NavLink = styled(Link)`\ncolor: #ffffff;\ndisplay: flex;\nfont-size: 2.5em;\nalign-items: center;\ntext-decoration: none;\npadding: 0 1rem;\nheight: 100%;\ncursor: pointer;\n\n`;\n\n// used to center items\nexport const CenterForm = styled.div`\ndisplay: flex;\njustify-content: center;\n\n\n`;\n  \n//menu that contains all of the options in the nav bar\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n  /* Second Nav */\n  /* margin-right: 24px; */\n  /* Third Nav */\n  /* width: 100vw;\n  white-space: nowrap; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n  \n//button in the nav bar\nexport const NavButton = styled.button`\n  \n  margin-right: 24px;\n  border-radius: 4px;\n  background: #ffffff;\n  color: #000000;\n  padding: 10px 22px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\n//login buttons\nexport const LogBtn = styled.button`\nborder-radius: 4px;\nbackground: #CC5500;\ncolor: #ffffff;\npadding: 10px 22px;\noutline: none;\nborder: none;\ncursor: pointer;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\n\n`;\n  \n","\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {\n  Nav,\n  NavLink,\n  NavMenu,\n  NavButton\n} from './NavbarElements';\n\n//creating the Navbar at the top of the screen\n  \nconst Navbar = () => {\n  return (\n    <>\n      <Nav> {/* styled component which is basically just the orange bar in the background */}\n  \n        <NavMenu> \n        {/* The NavLink is like a button, once pressed it sends us to the given path */}\n        <NavLink to='/'>TEAM SOFTWARE</NavLink>\n        </NavMenu>\n        <NavMenu>\n        {/* Link to go to when button pressed */}\n        <Link to='/signin' >\n        {/* NavButton are the two buttons on the top */}\n        <NavButton >Sign In</NavButton>\n        </Link>\n        <Link to='/signup' >\n        <NavButton>Sign Up</NavButton>\n        </Link>\n        </NavMenu>\n      </Nav>\n    </>\n  );\n};\n  \nexport default Navbar;","import React from \"react\";\nimport Navbar from './components/Navbar';\nimport TextField from '@mui/material/TextField';\nimport { useState } from \"react\";\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { IconButton } from '@mui/material';\nimport {Link} from 'react-router-dom';\nimport './App.css';\nimport {\n  LogBtn,\n  CenterForm,\n} from './components/Navbar/NavbarElements';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route\n} from \"react-router-dom\";\n\n\n//If signin is in the path, it will go to the sign in page\n//If signup is in the path, it will go to the sign up page\n//If the path is blank, it will go to the home screen\nexport default function App() {\n  return (\n    <Router>\n      <Navbar />\n      <div>\n        <Switch>\n          <Route path=\"/signin\"> \n            <SignIn />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n\n  const [imgNum, setVal] = useState(0); //imgNum is used to keep track of what icon is currently showing\n  const timer = React.useRef(null); //timer used for carousel\n  const icons = [\n  <AlternateEmailIcon className = \"large_icon\"/>,\n  <SecurityIcon className = \"large_icon\"/>,\n  <CloudIcon className = \"large_icon\"/>,\n  <AddBoxIcon className = \"large_icon\"/>,\n  <StorageIcon className = \"large_icon\"/>\n]; //list of all of the icons used\n\nconst descriptions = [\n<p className = \"bigger_text\">Create an account or sign in to get started</p>,\n<p className = \"bigger_text\">High level security with advanced encrytpion</p>,\n<p className = \"bigger_text\">App runs on the cloud so you can access from anywhere</p>,\n<p className = \"bigger_text\">Create multiple projects on your account</p>,\n<p className = \"bigger_text\">Your project information is stored securly in our databases</p>\n]; //descriptions of each icon\n\nfunction resetTimeout() {\n  if (timer.current) {\n    clearTimeout(timer.current); //setting timer back to 0 if it just changed or if an arrow was pressed\n  }\n}\n\nReact.useEffect(() => {\n  resetTimeout();\n  timer.current = setTimeout(\n    () =>\n      setVal((prevIndex) => prevIndex === (icons.length-1) ? 0 : prevIndex+1 //taking care of loop\n      ),\n    3000 //timer time\n  );\n\n\n  return () => {\n    resetTimeout();\n  };\n}, [imgNum]);\n\nconst updateVal = (input) => {\n\n  if(input === \"add\"){\n    setVal((prevIndex) => prevIndex === (icons.length-1) ? 0 : prevIndex+1); //taking care of loop\n  }\n  if(input === \"sub\"){\n    setVal((prevIndex) => prevIndex === 0 ? icons.length-1 : prevIndex-1);// taking care of loop\n  }\n\n}\n\n\n//Showing the current icon first along with the description and then the arrows\n//if the arrows are pressed, they pass a value to tell the fuction to add or subtract\n//the <centerForm> is a styled component using template literals to center all the conent\n  return (\n    <div>\n      <CenterForm>\n        {icons[imgNum]}\n      </CenterForm>\n      <CenterForm>\n        {descriptions[imgNum]}\n      </CenterForm>\n      <CenterForm>\n        <IconButton onClick={()=>updateVal(\"sub\")}>\n          <ArrowBackIosIcon/>\n        </IconButton>\n        <IconButton onClick={()=>updateVal(\"add\")}>\n          <ArrowForwardIosIcon/>\n        </IconButton>\n      </CenterForm>\n    </div>\n  \n  );\n}\n\nclass SignUp extends React.Component{\n  //constructor with all of the variables used for this component\n  constructor(props){\n    super(props);\n    this.state = {\n    email:\"\",\n    username: \"\",\n    password: \"\",\n    retype:\"\",\n    error:false,\n    blank:true,\n    authenticated:false,\n    suError:false,\n    eCode:\"\"\n    };\n  }\n  //updates the email and checks to see if any options are still blank\n  //TODO: disable signup button until all filled in\n  setEmail(e){\n    this.setState({email: e})\n    if(e !== \"\" && this.state.username !== \"\" && this.state.password !== \"\" && this.state.retype !== \"\"){\n      this.setState({blank:false});\n    }\n  }\n  setUsername(user){\n    this.setState({username: user})\n  }\n  //updates password and checks to see if the retype password box matches\n  setPassword(pass){\n    this.setState({password: pass})\n    if(this.state.retype === pass){\n      this.setState({error: false})\n    }else{\n      if(this.state.retype !== \"\"){\n        this.setState({error: true})\n      }else{\n        this.setState({error: false})\n      }\n    }\n  }\n  //if passwords dont match, we set error to true to show a red box\n  checkPassword(pass){\n    this.setState({retype:pass});\n    if(this.state.password === pass){\n      this.setState({error: false})\n    }else{\n      if(pass !== \"\"){\n        this.setState({error: true})\n      }else{\n        this.setState({error: false})\n      }\n      \n    }\n  }\n\n  submitClicked(){\n    let info = {'username':this.state.username,'password':this.state.password,'email':this.state.email};\n    fetch(\"http://127.0.0.1:5000/api/signup\",{method:'post',headers:{\"Content-Type\": \"application/json\"},body:JSON.stringify(info)}).then(response => response.json()).then(data => {\n      if(data.auth === 'done'){\n        this.setState({authenticated:true});\n      }else{\n        this.setState({suError:true});\n        this.setState({eCode:data.auth});\n      }\n      \n    });\n    \n  }\n\n  render(){\n    \n    //shows title and uses the CenterForm styled component to center everything\n    //Text fields from MUI, when something is typed they update the value\n    //the retype password text field has the error option in case the passwords dont match\n    //buttons at the bottom of the page to finish sign up or go to sign in if they already have an account\n\n    return (\n      <div>\n        \n        \n        <CenterForm>\n          <h2>Sign Up</h2>\n        </CenterForm>\n        <CenterForm>\n          <TextField onChange = {(event) => this.setEmail(event.target.value)} id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" margin=\"normal\" />\n        </CenterForm>\n        <CenterForm>\n          <TextField onChange = {(event) => this.setUsername(event.target.value)} id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" margin=\"normal\" />\n        </CenterForm>\n        <CenterForm>\n          <TextField onChange = {(event) => this.setPassword(event.target.value)} id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" margin=\"normal\" />\n        </CenterForm>\n        <CenterForm>\n          <TextField error={this.state.error} onChange = {(event) => this.checkPassword(event.target.value)} id=\"outlined-basic\" label=\"Retype Password\" variant=\"outlined\" margin=\"normal\" />\n        </CenterForm>\n        <CenterForm>\n        {this.state.suError?<p style={{ color: 'red' }}>{this.state.eCode}</p>:<p> </p>}\n      </CenterForm>\n        <CenterForm>\n          <LogBtn onClick={(event) => this.submitClicked()} type = \"submit\">Sign Up</LogBtn>\n        </CenterForm>\n\n        <CenterForm>\n         <p>Click here to sign in:</p>\n         </CenterForm>\n\n        <CenterForm>\n        <Link to='/signin' >\n        <LogBtn>Sign In</LogBtn>\n        </Link>\n        </CenterForm>\n        {this.state.authenticated?<Redirect to='/'/>:null}\n      </div>\n    );\n\n  }\n\n}\n\nfunction SignIn() {\n  //creating two variables for username and password and the functions to change their values\n  //setting both of their initial values to blank\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [authenticated,setAuth] = useState(false);\n  const [error,setError] = useState(false);\n  const [errorCode,setErrorCode] = useState(\"\");\n\n  const submitClicked = ()=>{\n    \n    let info = {'username':username,'password':password};\n    console.log(JSON.stringify(info))\n    fetch(\"http://127.0.0.1:5000/api/signin\",{method:'post',headers:{\"Content-Type\": \"application/json\"},body:JSON.stringify(info)}).then(response => response.json())\n    .then(data => {\n      if(data.auth === 'pass'){\n        setAuth(true);\n      }else{\n        setError(true);\n        setErrorCode(data.auth);\n      }\n      \n    });\n    \n  }\n\n  return (\n    <div>\n    \n      <CenterForm>\n        <h2>Welcome!</h2>\n      </CenterForm>\n      \n      <CenterForm>\n        <TextField name=\"username\" onChange = {(event) => setUsername(event.target.value)} id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" margin=\"normal\" />\n      </CenterForm>\n      <CenterForm>\n        <TextField name=\"password\" onChange = {(event) => setPassword(event.target.value)} id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" margin=\"normal\" />\n      </CenterForm>\n      <CenterForm>\n        {error?<p style={{ color: 'red' }}>{errorCode}</p>:<p> </p>}\n      </CenterForm>\n      <CenterForm>\n      <LogBtn onClick={submitClicked} type = \"submit\">Sign In</LogBtn>\n      </CenterForm>\n\n    \n\n      <CenterForm>\n      <p>Click here to sign up:</p>\n      </CenterForm>\n\n      <CenterForm>\n      <Link to='/signup' >\n        <LogBtn>Sign Up</LogBtn>\n      </Link>\n      </CenterForm>\n      {authenticated?<Redirect to='/'/>:null}\n    </div>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(\n\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}